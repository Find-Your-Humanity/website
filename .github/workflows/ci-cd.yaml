name: CI/CD Pipeline for Website

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout application code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.PROJECT_NAME }}.kr-central-2.kcr.dev
          username: ${{ secrets.ACCESS_KEY }}
          password: ${{ secrets.ACCESS_SECRET_KEY }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.PROJECT_NAME }}.kr-central-2.kcr.dev/${{ secrets.REPOSITORY_NAME }}/website:${{ github.sha }}
            ${{ secrets.PROJECT_NAME }}.kr-central-2.kcr.dev/${{ secrets.REPOSITORY_NAME }}/website:latest

      - name: Checkout Kubernetes manifests repository
        uses: actions/checkout@v4
        with:
          repository: Find-Your-Humanity/deploy-manifests
          path: deploy-manifests
          token: ${{ secrets.PAT }}

      - name: Create deployment file
        run: |
          IMAGE_TAG="${{ github.sha }}"
          
          # website 폴더 생성
          mkdir -p website
          
          # deployment 파일 생성
          cat > website/deployment-website.yaml << 'EOF'
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: website
            namespace: captcha
            labels:
              app: website
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: website
            template:
              metadata:
                labels:
                  app: website
              spec:
                nodeSelector:
                  pool-name: platform-pool
                containers:
                  - name: website
                    image: kc-sfacspace.kr-central-2.kcr.dev/team1-repo/website:IMAGE_TAG_PLACEHOLDER
                    ports:
                      - containerPort: 80
                    env:
                      - name: REACT_APP_API_URL
                        value: "http://captcha-api-backend-service.captcha.svc.cluster.local"
                    resources:
                      requests:
                        memory: "128Mi"
                        cpu: "100m"
                      limits:
                        memory: "256Mi"
                        cpu: "200m"
                    livenessProbe:
                      httpGet:
                        path: /
                        port: 80
                      initialDelaySeconds: 30
                      periodSeconds: 10
                    readinessProbe:
                      httpGet:
                        path: /
                        port: 80
                      initialDelaySeconds: 5
                      periodSeconds: 5
                imagePullSecrets:
                  - name: kcr-pull-secret
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: website-service
            namespace: captcha
            labels:
              app: website
          spec:
            selector:
              app: website
            ports:
              - protocol: TCP
                port: 80
                targetPort: 80
            type: ClusterIP
          ---
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: website-ingress
            namespace: captcha
            annotations:
              nginx.ingress.kubernetes.io/rewrite-target: /
              nginx.ingress.kubernetes.io/ssl-redirect: "true"
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
          spec:
            tls:
              - hosts:
                  - www.realcatcha.com
                  - realcatcha.com
                secretName: realcatcha-tls
            rules:
              - host: www.realcatcha.com
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: website-service
                          port:
                            number: 80
              - host: realcatcha.com
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: website-service
                          port:
                            number: 80
          EOF
          
          # 이미지 태그 교체
          sed -i "s/IMAGE_TAG_PLACEHOLDER/$IMAGE_TAG/g" website/deployment-website.yaml
        working-directory: ./deploy-manifests

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add website/deployment-website.yaml
          git commit -m "Update website image to ${{ github.sha }}" || echo "No changes to commit"
          git push
        working-directory: ./deploy-manifests 